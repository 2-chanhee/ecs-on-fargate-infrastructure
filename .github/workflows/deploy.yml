name: Deploy to Amazon ECS

on:
    push:
        branches: ['cicd-detail'] #TODO master, dev로 변경

#TODO env -> git secret
env:
    AWS_REGION: ap-northeast-2 # set this to your preferred AWS region, e.g. us-west-1
    ECR_REPOSITORY: test-app # set this to your Amazon ECR repository name

permissions:
    contents: read

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: production

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Create .env file
              run: |
                  touch .env
                  echo MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }} >> .env
                  echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> .env
                  echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> .env
                  echo MYSQL_HOST=${{ secrets.MYSQL_HOST }} >> .env
                  cat .env

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }} #TODO: to git secret

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ github.sha }} #TODO 버전관리 어떻게 할지 결정
                  # TODO env 여기로 이전
                  # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  # ECR_REPOSITORY: test-app
                  # MAGE_TAG: ${{ github.sha }}
              run: |
                  # Build a docker container and
                  # push it to ECR so that it can
                  # be deployed to ECS.
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                  echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

            # - name: Fill in the new image ID in the Amazon ECS task definition
            #   id: task-def
            #   uses: aws-actions/amazon-ecs-render-task-definition@v1
            #   with:
            #       task-definition: task-definition.json
            #       container-name: test-container
            #       image: ${{ steps.build-image.outputs.image }} # 위에서 빌드한 결과의 image를 가져다 씀

            # - name: Deploy Amazon ECS task definition
            #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
            #   with:
            #       task-definition: ${{ steps.task-def.outputs.task-definition }} # 위에서 사용한 결과를 가져다 씀
            #       service: test-service
            #       cluster: test-cluster
            #       wait-for-service-stability: true
